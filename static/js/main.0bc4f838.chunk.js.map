{"version":3,"sources":["providers/AlbumProvider.js","providers/PaginateProvider.js","components/ListItem/index.js","containers/List/index.js","components/Search/index.js","containers/SearchBar/index.js","components/Button/index.js","containers/Pagination/index.js","containers/AlbumPage/index.js","Root.jsx","App.js","reportWebVitals.js","index.js"],"names":["albumReducer","prevState","action","type","payload","AlbumContext","React","createContext","addAlbum","removeAlbum","albums","filteredAlbums","loading","hasFilter","setFilteredAlbum","AlbumProvider","children","useState","allAlbums","setAllAlbums","setLoading","setHasFilter","useReducer","state","dispatch","useEffect","fetchData","a","axios","get","res","data","feed","entry","albumContext","useMemo","list","filter","album","console","log","Provider","value","PaginateContext","itemsPerPage","currentPageIndex","setCurrentPageIndex","PaginateProvider","ListItem","name","image","price","artist","rights","className","src","alt","List","isLoading","length","map","item","Search","label","onInputChange","onInputKeyPress","onSubmitSearch","inputId","htmlFor","id","onChange","e","onKeyPress","onClick","icon","faSearch","SearchBar","filterAlbums","inputValue","setInputValue","target","toLowerCase","key","Button","hasCurrent","currentValue","buttonText","undefined","Pagination","dataLength","useContext","pageNumbers","i","Math","ceil","push","number","handlePageClick","AlbumPage","displayedAlbums","indexOfLastItem","indexOfFirstItem","currentPageAlbums","slice","filteredResults","includes","Root","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0bc4f838.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nfunction albumReducer(prevState, action) {\n  switch (action.type) {\n    case 'UPDATE_ALBUMS':\n      return action.payload;\n    default:\n      return prevState;\n  }\n}\n\nexport const AlbumContext = React.createContext({\n  addAlbum: () => {},\n  removeAlbum: () => {},\n  albums: [],\n  filteredAlbums: [],\n  loading: true,\n  hasFilter: false,\n  setFilteredAlbum: () => {},\n});\n\nexport const AlbumProvider = ({ children }) => {\n  const [allAlbums, setAllAlbums] = React.useState([]);\n  const [filteredAlbums, setFilteredAlbum] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  const [hasFilter, setHasFilter] = React.useState(false);\n  const [state, dispatch] = React.useReducer(albumReducer, []);\n\n  const url = 'https://itunes.apple.com/us/rss/topalbums/limit=100/json';\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      const res = await axios.get(url);\n      if (res) {\n        setAllAlbums(res.data.feed.entry);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  React.useEffect(() => {\n    dispatch({ type: 'UPDATE_ALBUMS', payload: allAlbums });\n  }, [allAlbums]);\n\n  const albumContext = React.useMemo(\n    () => ({\n      addAlbum: (payload) => {\n        setAllAlbums([...allAlbums, payload]);\n      },\n      removeAlbum: (payload) => {\n        const list = allAlbums.filter(\n          (album) =>\n            album['id']['attributes']['im:id'] !==\n            payload['id']['attributes']['im:id']\n        );\n        setAllAlbums([...list]);\n      },\n      albums: state,\n      filteredAlbums: filteredAlbums,\n      setFilteredAlbum: setFilteredAlbum,\n      loading: loading,\n      hasFilter: hasFilter,\n      setHasFilter: setHasFilter,\n    }),\n    [\n      state,\n      allAlbums,\n      filteredAlbums,\n      setFilteredAlbum,\n      loading,\n      hasFilter,\n      setHasFilter,\n    ]\n  );\n\n  console.log('hasFilter', hasFilter);\n\n  return (\n    <AlbumContext.Provider value={albumContext}>\n      {children}\n    </AlbumContext.Provider>\n  );\n};\n","import React from 'react';\n\nconst itemsPerPage = 12;\n\nexport const PaginateContext = React.createContext({\n  itemsPerPage,\n  currentPageIndex: 0,\n  setCurrentPageIndex: () => {},\n});\n\nexport const PaginateProvider = ({ children }) => {\n  const [currentPageIndex, setCurrentPageIndex] = React.useState(0);\n  console.log('provider', currentPageIndex);\n  return (\n    <PaginateContext.Provider\n      value={{\n        itemsPerPage,\n        currentPageIndex,\n        setCurrentPageIndex,\n      }}>\n      {children}\n    </PaginateContext.Provider>\n  );\n};\n","const ListItem = ({ name, image, price, artist, rights }) => {\n  return (\n    <div className=\"w-full md:max-w-full md:flex\">\n      <div className=\"h-48 md:h-auto flex-none bg-cover rounded-t md:rounded-t-none md:rounded-l text-center overflow-hidden\">\n        <img className=\"h-auto max-w-full\" src={image} alt={name}></img>\n      </div>\n      <div className=\"md:w-full border-r border-b border-l border-gray-400 md:border-l-0 md:border-t md:border-gray-400 bg-white rounded-b md:rounded-b-none md:rounded-r p-4 flex flex-col justify-between leading-normal\">\n        <h2>{name}</h2>\n        <div>\n          {/* <p>Artist(s): {artist} </p> */}\n          <p>Price: {price}</p>\n          {/* <small>{rights}</small> */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ListItem;\n","// import { useState, useEffect } from 'react';\n// import SearchBar from '../SearchBar/SearchBar';\n// import Pagination from '../Pagination/Pagination';\nimport ListItem from '../../components/ListItem';\n\nconst List = ({ data, isLoading }) => {\n  if (isLoading) {\n    return <h2 className=\"loading\">Loading...</h2>;\n  }\n  return (\n    <div>\n      {/* <SearchBar data={data} filterData={filterData} /> */}\n      {data.length > 0 ? (\n        //if current data exists (initial render or filtered result exists)\n        <ul className=\"grid grid-cols-3 gap-x-8 gap-y-4\">\n          {data.map((item) => (\n            <li key={item['id']['attributes']['im:id']}>\n              <ListItem\n                name={item['im:name']['label']}\n                image={item['im:image'][2]['label']}\n                price={item['im:price']['label']}\n                artist={item['im:artist']['label']}\n                rights={item['rights']['label']}\n              />\n            </li>\n          ))}\n        </ul>\n      ) : (\n        //no filtered result\n        <p>There's no match for your search, please try again.</p>\n      )}\n    </div>\n  );\n};\n\nexport default List;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nconst Search = ({\n  label,\n  onInputChange,\n  onInputKeyPress,\n  onSubmitSearch,\n  inputId,\n}) => {\n  return (\n    <div className=\"my-5\">\n      {/* label is not visible, only to help screenreader better perceive input field */}\n      <label data-testid=\"searchLabel\" className=\"sr-only\" htmlFor={inputId}>\n        Type in here to search\n      </label>\n      <input\n        className=\"shadow appearance-none border rounded px-3 mr-3 text-gray-700 leading-tight focus:outline-none focus:ring focus:border-blue-500 h-8\"\n        id={inputId}\n        data-testid=\"searchInput\"\n        type=\"text\"\n        onChange={(e) => onInputChange(e)}\n        onKeyPress={onInputKeyPress}\n      />\n      <button onClick={onSubmitSearch}>\n        {/* fontawesome already provides aria-hidden for icons*/}\n        <FontAwesomeIcon icon={faSearch} />\n        {/*below is sr-only text to assist sr-users understand button function*/}\n        <span className=\"sr-only\">Search</span>\n      </button>\n    </div>\n  );\n};\n\nexport default Search;\n","import { useState } from 'react';\nimport Search from '../../components/Search';\n\nconst SearchBar = ({ filterAlbums }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  //input element on change trigger inputValue change\n  //no search on input change as it creates confusing information for screenreader users\n  const onInputChange = (e) => {\n    setInputValue(e.target.value.toLowerCase());\n  };\n\n  //trigger search when press enter in input\n  const onInputKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      onSubmitSearch();\n    }\n  };\n\n  //search function, triggered by input enter key press or search button click\n  const onSubmitSearch = () => {\n    filterAlbums(inputValue);\n  };\n\n  return (\n    <div className=\"search-wrap\">\n      <Search\n        label={'Type in here to search'}\n        inputId={'album-search'}\n        onInputChange={onInputChange}\n        onInputKeyPress={onInputKeyPress}\n        onSubmitSearch={onSubmitSearch}\n      />\n    </div>\n  );\n};\n\nexport default SearchBar;\n","const Button = ({ hasCurrent, currentValue, onClick, buttonText }) => {\n  return (\n    <button\n      className=\"bg-transparent font-semibold py-2 px-4 border hover:border-black rounded\"\n      aria-current={hasCurrent ? currentValue : undefined}\n      onClick={onClick}>\n      {buttonText}\n    </button>\n  );\n};\n\nexport default Button;\n","// import './Pagination.css';\nimport { useContext } from 'react';\nimport { PaginateContext } from '../../providers/PaginateProvider';\nimport Button from '../../components/Button';\n\nconst Pagination = ({ dataLength }) => {\n  const { itemsPerPage, currentPageIndex, setCurrentPageIndex } =\n    useContext(PaginateContext);\n\n  const handlePageClick = (number) => {\n    setCurrentPageIndex(number - 1);\n  };\n\n  //calculate total page numbers\n  const pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(dataLength / itemsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <nav>\n      <ul className=\"flex mt-5 p-5 gap-x-2\">\n        {pageNumbers.map((number) => (\n          <li\n            key={number}\n            className={\n              currentPageIndex + 1 === number\n                ? 'text-blue-600' //different styling for current page\n                : ''\n            }>\n            <Button\n              hasCurrent={true}\n              currentValue={currentPageIndex + 1 === number ? 'page' : null}\n              onClick={() => handlePageClick(number)}\n              buttonText={number}\n            />\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","import { useContext } from 'react';\nimport { AlbumContext } from '../../providers/AlbumProvider';\nimport { PaginateContext } from '../../providers/PaginateProvider';\nimport List from '../List';\nimport SearchBar from '../SearchBar';\nimport Pagination from '../Pagination';\n\nconst AlbumPage = () => {\n  const { albums, loading, filteredAlbums, setFilteredAlbum } =\n    useContext(AlbumContext);\n  const { itemsPerPage, currentPageIndex, setCurrentPageIndex } =\n    useContext(PaginateContext);\n  const displayedAlbums = filteredAlbums.length > 0 ? filteredAlbums : albums;\n\n  // Get current page items\n  const indexOfLastItem =\n    displayedAlbums.length > itemsPerPage\n      ? (currentPageIndex + 1) * itemsPerPage\n      : displayedAlbums.length;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentPageAlbums = displayedAlbums.slice(\n    indexOfFirstItem,\n    indexOfLastItem\n  );\n\n  const filterAlbums = (inputValue) => {\n    if (inputValue) {\n      const filteredResults = albums.filter((album) =>\n        album['im:name']['label']\n          .toLowerCase()\n          .includes(inputValue.toLowerCase())\n      );\n      setFilteredAlbum([...filteredResults]);\n    } else {\n      setFilteredAlbum([]);\n    }\n    setCurrentPageIndex(0);\n  };\n  return (\n    <div className=\"p-4 md:p-8 flex flex-col items-center\">\n      <h1 className=\"text-3xl font-black\">Top Albums</h1>\n      <SearchBar filterAlbums={filterAlbums} />\n      <List data={currentPageAlbums} isLoading={loading} />\n      <Pagination dataLength={displayedAlbums.length} />\n    </div>\n  );\n};\n\nexport default AlbumPage;\n","import AlbumPage from './containers/AlbumPage';\n\nconst Root = () => {\n  return (\n    <div className=\"app-container\">\n      <AlbumPage />\n    </div>\n  );\n};\n\nexport default Root;\n","import { AlbumProvider } from './providers/AlbumProvider';\nimport { PaginateProvider } from './providers/PaginateProvider';\nimport Root from './Root';\n\nfunction App() {\n  return (\n    <AlbumProvider>\n      <PaginateProvider>\n        <Root />\n      </PaginateProvider>\n    </AlbumProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}